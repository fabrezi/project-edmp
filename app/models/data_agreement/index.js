module.exports = (sequelize, Sequelize) => {
  let data_agreements = {};
  data_agreements.tmnaDataAgreement = require("./tmnaDataAgreement.model.js")(sequelize, Sequelize);
  data_agreements.tfsDataAgreement = require("./tfsDataAgreement.model.js")(sequelize, Sequelize);
  data_agreements.tcjDataAgreement = require("./tcjDataAgreement.model.js")(sequelize, Sequelize);
  data_agreements.tcnaDataAgreement = require("./tcnaDataAgreement.model.js")(sequelize, Sequelize);
  data_agreements.tmcDataAgreement = require("./tmcDataAgreement.model.js")(sequelize, Sequelize);
  data_agreements.wpDataAgreement = require("./wpDataAgreement.model.js")(sequelize, Sequelize);
  data_agreements.gstDataAgreement = require("./gstDataAgreement.model.js")(sequelize, Sequelize);
  data_agreements.setDataAgreement = require("./setDataAgreement.model.js")(sequelize, Sequelize);
  data_agreements.servcoDataAgreement = require("./servcoDataAgreement.model.js")(sequelize, Sequelize);
  data_agreements.tciDataAgreement = require("./tciDataAgreement.model.js")(sequelize, Sequelize);
  data_agreements.tmeDataAgreement = require("./tmeDataAgreement.model.js")(sequelize, Sequelize);
  data_agreements.tmexDataAgreement = require("./tmexDataAgreement.model.js")(sequelize, Sequelize);
  data_agreements.lmexDataAgreement = require("./lmexDataAgreement.model.js")(sequelize, Sequelize);
  data_agreements.tdprDataAgreement = require("./tdprDataAgreement.model.js")(sequelize, Sequelize);
  data_agreements.triDataAgreement = require("./triDataAgreement.model.js")(sequelize, Sequelize);
  data_agreements.masterDataAgreement = require("./masterDataAgreement.model.js")(sequelize, Sequelize);

  data_agreements.masterDataAgreement.belongsTo(data_agreements.tmnaDataAgreement, { foreignKey: { allowNull: false } });
  data_agreements.tmnaDataAgreement.hasOne(data_agreements.masterDataAgreement, { foreignKey: { allowNull: false } });
  data_agreements.masterDataAgreement.belongsTo(data_agreements.tfsDataAgreement, { foreignKey: { allowNull: false } });
  data_agreements.tfsDataAgreement.hasOne(data_agreements.masterDataAgreement, { foreignKey: { allowNull: false } });
  data_agreements.masterDataAgreement.belongsTo(data_agreements.tcjDataAgreement, { foreignKey: { allowNull: false } });
  data_agreements.tcjDataAgreement.hasOne(data_agreements.masterDataAgreement, { foreignKey: { allowNull: false } });
  data_agreements.masterDataAgreement.belongsTo(data_agreements.tcnaDataAgreement, { foreignKey: { allowNull: false } });
  data_agreements.tcnaDataAgreement.hasOne(data_agreements.masterDataAgreement, { foreignKey: { allowNull: false } });
  data_agreements.masterDataAgreement.belongsTo(data_agreements.tmcDataAgreement, { foreignKey: { allowNull: false } });
  data_agreements.tmcDataAgreement.hasOne(data_agreements.masterDataAgreement, { foreignKey: { allowNull: false } });
  data_agreements.masterDataAgreement.belongsTo(data_agreements.wpDataAgreement, { foreignKey: { allowNull: false } });
  data_agreements.wpDataAgreement.hasOne(data_agreements.masterDataAgreement, { foreignKey: { allowNull: false } });
  data_agreements.masterDataAgreement.belongsTo(data_agreements.gstDataAgreement, { foreignKey: { allowNull: false } });
  data_agreements.gstDataAgreement.hasOne(data_agreements.masterDataAgreement, { foreignKey: { allowNull: false } });
  data_agreements.masterDataAgreement.belongsTo(data_agreements.setDataAgreement, { foreignKey: { allowNull: false } });
  data_agreements.setDataAgreement.hasOne(data_agreements.masterDataAgreement, { foreignKey: { allowNull: false } });
  data_agreements.masterDataAgreement.belongsTo(data_agreements.servcoDataAgreement, { foreignKey: { allowNull: false } });
  data_agreements.servcoDataAgreement.hasOne(data_agreements.masterDataAgreement, { foreignKey: { allowNull: false } });
  data_agreements.masterDataAgreement.belongsTo(data_agreements.tciDataAgreement, { foreignKey: { allowNull: false } });
  data_agreements.tciDataAgreement.hasOne(data_agreements.masterDataAgreement, { foreignKey: { allowNull: false } });
  data_agreements.masterDataAgreement.belongsTo(data_agreements.tmeDataAgreement, { foreignKey: { allowNull: false } });
  data_agreements.tmeDataAgreement.hasOne(data_agreements.masterDataAgreement, { foreignKey: { allowNull: false } });
  data_agreements.masterDataAgreement.belongsTo(data_agreements.tmexDataAgreement, { foreignKey: { allowNull: false } });
  data_agreements.tmexDataAgreement.hasOne(data_agreements.masterDataAgreement, { foreignKey: { allowNull: false } });
  data_agreements.masterDataAgreement.belongsTo(data_agreements.lmexDataAgreement, { foreignKey: { allowNull: false } });
  data_agreements.lmexDataAgreement.hasOne(data_agreements.masterDataAgreement, { foreignKey: { allowNull: false } });
  data_agreements.masterDataAgreement.belongsTo(data_agreements.tdprDataAgreement, { foreignKey: { allowNull: false } });
  data_agreements.tdprDataAgreement.hasOne(data_agreements.masterDataAgreement, { foreignKey: { allowNull: false } });
  data_agreements.masterDataAgreement.belongsTo(data_agreements.triDataAgreement, { foreignKey: { allowNull: false } });
  data_agreements.triDataAgreement.hasOne(data_agreements.masterDataAgreement, { foreignKey: { allowNull: false } });

  return data_agreements;
};